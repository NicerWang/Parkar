name: build&deploy

on:
  push:
    tags:
      - 'v*'

jobs:
  service-user:
    runs-on: ubuntu-latest
    steps:
      - name: Docker - Fetch metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: nicerwang/parkar-user
      - uses: actions/checkout@v2
      - name: JAVA - Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Maven - Build
        run: cd service-user && mvn package -Dmaven.test.skip=true
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Docker - Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Docker - Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./service-user/
          file: ./service-user/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
      - name: Deploy bash
        uses: fifsky/ssh-action@master
        with:
          command: |
            sh start-user.sh
          host: ${{ secrets.HOST_USER }}
          user: ${{ secrets.USER }}
          key: ${{ secrets.PRIVATE_KEY }}
  service-admin:
    runs-on: ubuntu-latest
    steps:
      - name: Docker - Fetch metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: nicerwang/parkar-admin
      - uses: actions/checkout@v2
      - name: JAVA - Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Maven - Build
        run: cd service-admin && mvn package -Dmaven.test.skip=true
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Docker - Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Docker - Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./service-admin/
          file: ./service-admin/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
      - name: Deploy bash
        uses: fifsky/ssh-action@master
        with:
          command: |
            sh start-admin.sh
          host: ${{ secrets.HOST_ADMIN }}
          user: ${{ secrets.USER }}
          key: ${{ secrets.PRIVATE_KEY }}
  service-management:
    runs-on: ubuntu-latest
    steps:
      - name: Docker - Fetch metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: nicerwang/parkar-management
      - uses: actions/checkout@v2
      - name: JAVA - Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Maven - Build
        run: cd service-management && mvn package -Dmaven.test.skip=true
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Docker - Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Docker - Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./service-management/
          file: ./service-management/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
      - name: Deploy bash
        uses: fifsky/ssh-action@master
        with:
          command: |
            sh start-management.sh
          host: ${{ secrets.HOST_MANAGENENT }}
          user: ${{ secrets.USER }}
          key: ${{ secrets.PRIVATE_KEY }}
  frontend-user:
    runs-on: ubuntu-latest
    steps:
      - name: Docker - Fetch metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: nicerwang/parkar-frontend-user
      - uses: actions/checkout@v2
      - name: Node.js - Set up
        uses: actions/setup-node@v2.4.1
      - name: NPM - Build
        run: cd frontend-user && npm install --registry=https://registry.npm.taobao.org && npm run build
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Docker - Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Docker - Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./frontend-user/
          file: ./frontend-user/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
      - name: Deploy bash
        uses: fifsky/ssh-action@master
        with:
          command: |
            sh start-frontend-user.sh
          host: ${{ secrets.HOST_FRONT }}
          user: ${{ secrets.USER }}
          key: ${{ secrets.PRIVATE_KEY }}
  frontend-management:
    runs-on: ubuntu-latest
    steps:
      - name: Docker - Fetch metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: nicerwang/parkar-frontend-management
      - uses: actions/checkout@v2
      - name: Node.js - Set up
        uses: actions/setup-node@v2.4.1
      - name: NPM - Build
        run: cd frontend-management &&  npm install --registry=https://registry.npm.taobao.org && npm run build
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Docker - Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Docker - Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./frontend-management/
          file: ./frontend-management/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
      - name: Deploy bash
        uses: fifsky/ssh-action@master
        with:
          command: |
            sh start-frontend-management.sh
          host: ${{ secrets.HOST_FRONT }}
          user: ${{ secrets.USER }}
          key: ${{ secrets.PRIVATE_KEY }}