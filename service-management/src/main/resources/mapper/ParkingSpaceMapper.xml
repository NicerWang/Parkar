<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="nk.parkar.management.mapper.ParkingSpaceMapper">
    <resultMap id="BaseResultMap" type="nk.parkar.management.model.ParkingSpace">
        <id column="space_id" jdbcType="INTEGER" property="spaceId"/>
        <result column="occupied" jdbcType="TINYINT" property="occupied"/>
        <result column="mode" jdbcType="INTEGER" property="mode"/>
        <result column="ban" jdbcType="TINYINT" property="ban"/>
        <result column="booked" jdbcType="TINYINT" property="booked"/>
        <result column="floor" jdbcType="INTEGER" property="floor"/>
        <result column="x_coordinate" jdbcType="INTEGER" property="xCoordinate"/>
        <result column="y_coordinate" jdbcType="INTEGER" property="yCoordinate"/>
    </resultMap>
    <sql id="Base_Column_List">
        space_id, occupied, mode, ban, booked, floor, x_coordinate, y_coordinate
    </sql>

    <select id="selectMaxSpaceId" resultType="Integer">
        select max(space_id)
        from parking_space
    </select>

    <select id="selectByAvailableTime" resultType="Integer">
        select space_id
        from parking_space
        where space_id
                  not in (select space_id
                          from parking_time
                          where (start_time between #{startTime} and #{endTime})
                             or (end_time between #{startTime} and #{endTime})
                             or (start_time <![CDATA[ <= ]]> #{startTime} and end_time <![CDATA[ >= ]]> #{endTime}))
            and ban = 0
    </select>

    <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from parking_space
        where space_id = #{spaceId,jdbcType=INTEGER}
    </select>

    <delete id="deleteById" parameterType="java.lang.Integer">
        delete
        from parking_space
        where space_id = #{spaceId,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="nk.parkar.management.model.ParkingSpace">
        insert into parking_space (space_id, occupied, mode,
                                   ban, booked, floor, x_coordinate, y_coordinate)
        values (#{spaceId,jdbcType=INTEGER}, #{occupied,jdbcType=TINYINT}, #{mode,jdbcType=INTEGER},
                #{ban,jdbcType=TINYINT}, #{booked,jdbcType=TINYINT}, #{floor,jdbcType=INTEGER},
                #{xCoordinate,jdbcType=INTEGER}, #{yCoordinate,jdbcType=INTEGER})
    </insert>

    <update id="updateById" parameterType="nk.parkar.management.model.ParkingSpace">
        update parking_space
        set occupied     = #{occupied,jdbcType=TINYINT},
            mode         = #{mode,jdbcType=INTEGER},
            ban          = #{ban,jdbcType=TINYINT},
            booked       = #{booked,jdbcType=TINYINT},
            floor        = #{floor,jdbcType=INTEGER},
            x_coordinate = #{xCoordinate,jdbcType=INTEGER},
            y_coordinate = #{yCoordinate,jdbcType=INTEGER}
        where space_id = #{spaceId,jdbcType=INTEGER}
    </update>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from parking_space
    </select>

    <update id="updateByIdSelective" parameterType="nk.parkar.management.model.ParkingSpace">
        update parking_space
        <set>
            <if test="occupied != null">
                occupied = #{occupied,jdbcType=TINYINT},
            </if>
            <if test="mode != null">
                mode = #{mode,jdbcType=INTEGER},
            </if>
            <if test="ban != null">
                ban = #{ban,jdbcType=TINYINT},
            </if>
            <if test="booked != null">
                booked = #{booked,jdbcType=TINYINT},
            </if>
            <if test="floor != null">
                floor = #{floor,jdbcType=INTEGER},
            </if>
            <if test="xCoordinate != null">
                x_coordinate = #{xCoordinate,jdbcType=INTEGER},
            </if>
            <if test="yCoordinate != null">
                y_coordinate = #{yCoordinate,jdbcType=INTEGER},
            </if>
        </set>
        where space_id = #{spaceId,jdbcType=INTEGER}
    </update>
</mapper>