<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nkcs.nkparking.mapper.ParkingSpaceMapper">
  <resultMap id="BaseResultMap" type="com.nkcs.nkparking.model.ParkingSpace">
    <id column="space_id" jdbcType="INTEGER" property="spaceId" />
    <result column="occupied" jdbcType="TINYINT" property="occupied" />
    <result column="mode" jdbcType="INTEGER" property="mode" />
    <result column="ban" jdbcType="TINYINT" property="ban" />
  </resultMap>
  <sql id="Base_Column_List">
    space_id, occupied, mode, ban
  </sql>


  <select id="selectByAvailableTime" resultType="Integer">
    select space_id from parking_space
    where space_id
    not in (select
                   space_id
            from
                   parking_time
            where
                    (start_time between #{startTime} and #{endTime})
                   or
                    (end_time between #{startTime} and #{endTime}))
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from parking_space
    where space_id = #{spaceId,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from parking_space
    where space_id = #{spaceId,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.nkcs.nkparking.model.ParkingSpace">
    insert into parking_space (space_id, occupied, mode, 
      ban)
    values (#{spaceId,jdbcType=INTEGER}, #{occupied,jdbcType=TINYINT}, #{mode,jdbcType=INTEGER}, 
      #{ban,jdbcType=TINYINT})
  </insert>

  <insert id="insertSelective" parameterType="com.nkcs.nkparking.model.ParkingSpace">
    insert into parking_space
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="spaceId != null">
        space_id,
      </if>
      <if test="occupied != null">
        occupied,
      </if>
      <if test="mode != null">
        mode,
      </if>
      <if test="ban != null">
        ban,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="spaceId != null">
        #{spaceId,jdbcType=INTEGER},
      </if>
      <if test="occupied != null">
        #{occupied,jdbcType=TINYINT},
      </if>
      <if test="mode != null">
        #{mode,jdbcType=INTEGER},
      </if>
      <if test="ban != null">
        #{ban,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.nkcs.nkparking.model.ParkingSpace">
    update parking_space
    <set>
      <if test="occupied != null">
        occupied = #{occupied,jdbcType=TINYINT},
      </if>
      <if test="mode != null">
        mode = #{mode,jdbcType=INTEGER},
      </if>
      <if test="ban != null">
        ban = #{ban,jdbcType=TINYINT},
      </if>
    </set>
    where space_id = #{spaceId,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.nkcs.nkparking.model.ParkingSpace">
    update parking_space
    set occupied = #{occupied,jdbcType=TINYINT},
      mode = #{mode,jdbcType=INTEGER},
      ban = #{ban,jdbcType=TINYINT}
    where space_id = #{spaceId,jdbcType=INTEGER}
  </update>
</mapper>